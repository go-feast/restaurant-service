version: '3.9'

networks:
  api:
    driver: bridge

x-service-volume:  &service-volume
  type: bind
  source: ./
  target: /app



services:
  service-consumer:
    depends_on:
      - kafka
      - jaeger
    env_file:
      - dev.env
    environment:
      METRICS_HOST: service-consumer
      METRICS_PORT: 8083
    build:
      dockerfile: Dockerfile
      context: ./
      target: dev_consumer
      args:
        - metric_port_consumer=8083
    restart: on-failure
    volumes:
      - *service-volume
    command:
      - "CompileDaemon"
      - "-log-prefix=false"
      - "-graceful-timeout=10"
      - "-graceful-kill=true"
      - "-exclude-dir=.git -exclude-dir=.run -exclude-dir=.github"
      - "-build=/go/bin/task build-api-consumer"
      - "-command=/app/bin/api-consumer"
    ports:
      - "8083:8083" # metric server port. Make sure u change it in deployment/development/external/prometheus.yml
    healthcheck:
      test: ["CMD", "curl", "service-consumer:8082/healthz"]
      retries: 10
      interval: 5s
    networks:
      - api

  service:
    depends_on:
      - kafka
      - jaeger
    env_file:
      - dev.env
    environment:
      SERVER_HOST: service
      SERVER_PORT: 8080
      METRICS_HOST: service
      METRICS_PORT: 8081
      SERVER_WRITETIMEOUT: 10s
      SERVER_READTIMEOUT: 5s
      SERVER_IDLETIMEOUT: 5s
    build:
      dockerfile: Dockerfile
      context: ./
      target: dev_service
      args:
        - service_port=8080
        - service_metrics_port=8081
    restart: on-failure
    volumes:
      - *service-volume
    command:
      - "CompileDaemon"
      - "-log-prefix=false"
      - "-graceful-timeout=10"
      - "-graceful-kill=true"
      - "-exclude-dir=.git -exclude-dir=.run -exclude-dir=.github"
      - "-build=/go/bin/task build-api-server"
      - "-command=/app/bin/api-server"
    ports:
      - "8080:8080" # server port
      - "8081:8081" # metric server port
    healthcheck:
      test: ["CMD", "curl", "service:8080/healthz" ]
      interval: 5s
      retries: 10
    networks:
      - api

  prometheus:
    depends_on:
      - service
    image: prom/prometheus:v2.40.4
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/development/external/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  jaeger:
    hostname: jaeger
    image: jaegertracing/all-in-one:1.52
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686" # serve frontend
      - "14269:14269" # healthcheck
      - "4318:4318" # accept OpenTelemetry Protocol (OTLP) over HTTP
    healthcheck:
      test: ["CMD", "curl", "jaeger:14269/"]
      timeout: 10s
      retries: 5
    networks:
      - api

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    restart: unless-stopped
    logging:
      driver: none
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - api

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    restart: unless-stopped
    depends_on:
      - zookeeper
    logging:
      driver: none
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - api